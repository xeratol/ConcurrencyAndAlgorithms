Identify 2-3 problems
- ex. Fourier Transform <- will eventually do
- Real World I/O (ex File I/O) <- file i/o limited by bandwidth, not processing
- Number Crunching <- Matrix Operations, Convolutions
- Client/Server
-- Server serving 100,000s of clients
-- Sequence of Operations is valid
-- Hough Transform

Check out AWS

Multi-Processor or Distributed Network or Compute Shaders
<- Unity3D Compute Shaders (based on DirectCompute); physics-affected particle system

Review Histogram Equalization if it makes sense.

----

Find out how to force a race condition via std::this_thread::Sleep_*
 -> demonstrated using shared_future
For Image Convert example, use tiles instead of rows. Consider cache size.

----

Parallel Quicksort
Start Compute Shaders of Unity3D -> animated texture

----

Find tool to find bottlenecks in code (Profiler)
- https://www.spec.org/benchmarks.html
Compute Shader (Possible) Applications
- Splines
- N-body problem (Boids)

Atomics - Theoretical
Parallel FFT on CPU
Compute Shaders - Particle System
Parallel FFT on GPU

----
